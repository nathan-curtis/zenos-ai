{%- macro parse_index_command(command) -%}

  {#-- Version 1.0, beta 2/12/2025 --#}
  {#-- Usage Summary: --#}
  {#-- Enter a space-delimited command with one or two labels. --#}        
  {#-- Optionally include a reserved operator (AND, OR, XOR, NOT) between labels --#}
  {#-- and an expansion flag (true/t/y/yes/on/1 for expansion) as the final token. --#}
  {#-- Quoted labels force two separate labels (default op = AND); --#}
  {#-- unquoted tokens are joined into one label. --#}

  {# Define the reserved operators and recognized boolean tokens #}
  {%- set reserved = ['AND', 'OR', 'XOR', 'NOT'] -%}
  {%- set true_tokens = ['true', 't', 'y', 'yes', 'on', '1'] -%}
  {%- set false_tokens = ['false', 'f', 'n', 'no', 'off', '0'] -%}

{#-- Step 0: Capture '*' Wildcard as Top Level Index --#}
{%- if ( command == "" ) or (command == "*") -%}
  {%- set command = '*' -%}
  {%- set response = labels() -%}
  'query':'{{- command -}}'
  'response':
    'grand_index':'{{- response -}}'
  'help': >
    Welcome to the Library Grand Index.  (AKA: The Index)
    Enter a space-delimited command string as follows to search:
    ~INDEX~label
    
    Optionally, include a reserved operator (AND, OR, XOR, NOT)
    between labels:
    ~INDEX~label OPERATOR 'another label'

    Finally you can request the details of the returned entities
    (state, metadata, attributes, etc.) by setting the detail
    flag (the command will look at whatever the last parameter is)
    to true.
    ~INDEX~label OPERATOR 'another label' true
    
    Use quotes around labels containing whitespace characters
    Note that best practice is to narrow and refine search using
    filtering before applying detail flag for result.
{%- else -%}

    {#-- Step 1: Tokenize the input --#}
    {%- set tokens = command.strip().split() -%}
    {%- if tokens|length == 0 -%}
      ERROR: No input provided.
    {%- endif -%}

    {#-- Step 2: Check for an expansion flag at the end --#}
    {%- set exp = '' -%}
    {%- if tokens|length > 0 and tokens[-1]|lower in true_tokens -%}
      {%- set exp = 't' -%}
      {%- set tokens = tokens[:-1] -%}
    {%- elif tokens|length > 0 and tokens[-1]|lower in false_tokens -%}
      {%- set exp = '' -%}
      {%- set tokens = tokens[:-1] -%}
    {%- endif -%}

    {#-- Step 3: If the last token is a reserved operator, drop it (fail-friendly) --#}
    {%- if tokens|length > 0 and tokens[-1]|upper in reserved -%}
      {%- set tokens = tokens[:-1] -%}
    {%- endif -%}

    {#-- Step 4: Look for a reserved operator in the tokens (only if itâ€™s not the last token) --#}
    {%- set ns = namespace(op_index = none) -%}
    {%- for i in range(tokens|length) -%}
      {%- if tokens[i]|upper in reserved -%}
        {%- set ns.op_index = i -%}
        {%- break -%}
      {%- endif -%}
    {%- endfor -%}
    {%- set op_index = ns.op_index -%}

    {#-- Step 5: Split into label_x, op, and label_y accordingly --#}
    {%- if op_index is not none -%}
      {# Reserved operator found: split tokens correctly #}
      {%- set label_x = tokens[:op_index] | join(" ") | trim("'\"") -%}
      {%- set op = tokens[op_index] | upper -%}
      {%- set label_y = tokens[op_index + 1:] | join(" ") | trim("'\"") -%}
    {%- elif tokens|length == 2 and (
            tokens[0].startswith("'") or tokens[0].startswith('"') or 
            tokens[1].startswith("'") or tokens[1].startswith('"')
          ) -%}
      {# Exactly two tokens with at least one quoted: treat as separate labels, default to AND #}
      {%- set label_x = tokens[0] | trim("'\"") -%}
      {%- set label_y = tokens[1] | trim("'\"") -%}
      {%- set op = 'AND' -%}
    {%- else -%}
      {# Default: join all tokens into a single label #}
      {%- set label_x = tokens | join(" ") -%}
      {%- set op = '' -%}
      {%- set label_y = '' -%}
    {%- endif -%}

    {#-- Step 6: Validate and call the query macro --#}
    {%- if label_x == '' -%}
      ERROR: Invalid input. At least one label must be provided in position 1. Received: {{ command }}
      USE: Library Command: ~INDEX~'*' for the Grand Index directory and detailed use instructions.
    {%- else -%}
      {{ query(label_x, label_y, op, exp) }}
    {%- endif -%}
{%- endif -%}
{%- endmacro -%}

{%- macro query(label_x, label_y = '', op = '', exp = '') %}

{#- set defaults #}
{%- set err = false -%}
{%- if not (op) or (op == '') -%}
  {%- set op = 'AND' -%}
{%- else -%}
  {%- set op = op | upper -%}
{%- endif -%}

{#- is x null? #}
{% if label_x != '' -%}
  {%- set x = expand(label_entities(label_x)) -%}
  {#- is y null? -#}
  {%- if label_y == '' -%}
    {#- y null = single lookup -#}
    {%- set entities =  x | list -%}
      {% if exp != '' -%}
      Library Index Query: '{{label_x}}' (EXPANDED)
      {% endif -%}

  {%- else -%}
    {#- X/Y lookup -#}
    {%- set y = expand(label_entities(label_y))
        | map(attribute='entity_id')
        | list -%}
    {%- if op == 'AND' -%}
      {#- AND (this is where it do)-#}
      {%- set entities = x | selectattr('entity_id', 'in', y )
          | list -%}
      {% if exp != '' -%}
      Library Index Query: '{{label_x}}' AND '{{label_y}}' (EXPANDED)
      {%- endif -%}
    {%- elif op == 'OR' -%}
      {#- OR-#}
      {%- set entities = (label_entities(label_x)+label_entities(label_y))
        | expand
        | list -%}
      {% if exp != '' -%}
      Library Index Query: '{{label_x}}' OR '{{label_y}}' (EXPANDED)
      {% endif -%}
    {%- elif op == 'NOT' -%}
      {#- NOT -#}
      {%- set entities = x | rejectattr('entity_id', 'in', y )
          | list -%}
      {% if exp != '' -%}
      Library Index Query: '{{label_x}}' NOT '{{label_y}}' (EXPANDED)
      {%- endif -%}
    {%- elif op == 'XOR' -%}
      {#- XOR-#}
      {%- set x1 = label_entities(label_x)
        | reject('in',label_entities(label_y))
        | list -%}
      {%- set y1 = label_entities(label_y)
        | reject('in',label_entities(label_x))
        | list -%}
      {%- set entities = ( x1 + y1 ) | unique | expand -%}
      {% if exp != '' -%}
      Library Index Query: '{{label_x}}' XOR '{{label_y}}' (EXPANDED)
      {%- endif -%}
    {%- else -%} 
      ERROR: Invalid operator: '{{op}}' Supported: '['AND', 'OR', 'NOT', 'XOR']' (Default - 'AND')
      ----
    {%- endif -%}
  {% endif %}

  {#- return -%}
  {#- expand? -#}
  {% if exp == '' -%}
    {%- set entities = entities
      | map(attribute='entity_id')    
      | list -%}
    {{entities}}
  {%- else -%}
    {%- for entity in entities %}
------------------------------
entity_id       : '{{ entity.entity_id }}'
  friendly_name : '{{ entity.attributes.friendly_name}}'
  state         : '{{ entity.state }}'
  unit_of_measurement : '{{ entity.attributes.unit_of_measurement or none }}'
  labels        : '{{ labels(entity.entity_id)
                      | sort
                      | list }}'
  last_updated  : '{{ time_since(entity.last_updated | as_local) }}'
  attributes    : '[{% set attributes = entity.attributes  %}
                     {%- for attribute in attributes -%}
                       '{{attribute}}' : '{{state_attr(entity.entity_id, attribute)}}'
                       {%- if not loop.last %}, {% endif %}
                     {%- endfor %}]'
    {%- endfor %}
  {% endif %}
{% else %}
{#- x is null #}
ERROR: recieved null first parameter - at least one label is required.
{% endif -%}
{%- endmacro -%}

{%- macro label_entities_and(label_x, label_y, exp = '' ) -%}
{%- set x = expand(label_entities(label_x)) -%}
{%- set y = expand(label_entities(label_y))
    | map(attribute='entity_id')
    | list -%}
{%- set entities = x | selectattr('entity_id', 'in', y )
    | list -%}
{#- AND -#}
{#- expand? -#}
{%- if exp == '' -%}
  {%- set entities = entities
    | map(attribute='entity_id')    
    | list -%}
{%- endif -%}
{{entities}}
{%- endmacro -%}

{%- macro label_entities_state_ex_and(label_x, label_y, check_state, exp = '') -%}
  {%- set y = expand(label_entities(label_y))
              | map(attribute='entity_id')
              | list -%}
  {%- if exp == '' -%}
    {%- set x = expand(label_entities(label_x))
                | selectattr('state','eq', check_state )
                | map(attribute='entity_id')
                | list  -%}
    {{- x | select('in', y )
          | list -}}                
  {%- else -%}
    {%- set x = expand(label_entities(label_x))
                | selectattr('state','eq', check_state )
                | list  -%}
  {{- x | selectattr('entity_id','in', y )
        | list -}}  
  {%- endif -%}
{%- endmacro -%}

{%- macro label_entities_state_not_ex_and(label_x, label_y, check_state, exp = '') -%}
  {%- set y = expand(label_entities(label_y))
              | map(attribute='entity_id')
              | list -%}
  {%- if exp == '' -%}
    {%- set x = expand(label_entities(label_x))
                | selectattr('state','ne', check_state )
                | map(attribute='entity_id')
                | list  -%}
    {{- x | select('in', y )
          | list -}}                
  {%- else -%}
    {%- set x = expand(label_entities(label_x))
                | selectattr('state','ne', check_state )
                | list  -%}
  {{- x | selectattr('entity_id','in', y )
        | list -}}  
  {%- endif -%}
{%- endmacro -%}

{%- macro label_entities_not(label_x, label_y) -%}
  {%- set x = expand(label_entities(label_x)) -%}
  {%- set y = expand(label_entities(label_y))
    | map(attribute='entity_id')
    | list -%}
    {{- x | rejectattr ('entity_id', 'in', y) 
      | list -}}
{%- endmacro -%}

{%- macro label_entities_or(label_x, label_y) -%}
  {%- set x = expand(label_entities(label_x))
    | map(attribute='entity_id')
    | list -%}
  {%- set y = expand(label_entities(label_y))
    | map(attribute='entity_id')
    | list -%}
    {{- x + y
      | list -}}  
{%- endmacro -%}

{%- macro label_entities_xor(label_x, label_y) -%}
  {%- set x = expand(label_entities(label_x))
    | map(attribute='entity_id')
    | list -%}
  {%- set y = expand(label_entities(label_y))
    | map(attribute='entity_id')
    | list -%}
  {%-set x1 = x | rejectattr ('entity_id', 'in', y) 
    | list -%}
  {%-set y1 = y | rejectattr ('entity_id', 'in', x) 
    | list -%}
  {{- x1 + y1
    | list -}} 
{%- endmacro -%}

{%- macro label_entities_cart(label_x, label_y) -%}
  {%- set x = expand(label_entities(label_x))
    | map(attribute='entity_id')
    | list -%}
  {%- set y = expand(label_entities(label_y))
    | map(attribute='entity_id')
    | list -%}
  {%- if (( x | string | length ) * ( y | string | length )) >= 262144 -%}
    ERROR OUTPUT BUFFER EXCEEDED USE SMALLER INPUT SETS ('{{label_x}}', '{{label_y}}')
  {%- else -%}
    {%- if x -%}
      {%- for x_entity_id in x -%}
        {%- if y -%}
        {
          {%- for y_entity_id in y -%}
            {'{{ x_entity_id }}','{{ y_entity_id }}'}
          {%- endfor -%}
        },
        {%- endif -%} 
      {%- endfor -%}
    {%- endif -%}    
  {%- endif -%}
{%- endmacro -%}

{%- macro label_entities_join(label_x, label_y, operator) -%}
    {%- if ( operator == '' ) or ( operator == 'AND' ) -%}
      {{ label_entities_and(label_x, label_y) }}
    {%- elif ( operator == 'OR' ) -%}
      {{ label_entities_or(label_x, label_y) }}
    {%- elif ( operator == 'NOT' )  -%}
      {{ label_entities_not(label_x, label_y) }}
    {%- elif ( operator == 'XOR' ) -%}
      {{ label_entities_xor(label_x, label_y) }}
    {%- elif ( operator == 'CART' ) -%}
      {{ label_entities_cart(label_x, label_y) }}
    {%- else -%}
      JOIN: ERROR UNKNOWN OPERATOR : {{operator}}
    {%- endif -%}
{%- endmacro -%}
