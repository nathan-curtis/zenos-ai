sequence:
  - variables:
      action: "{{ action_type | default('read') | lower }}"
      label_index: "{{ labels() |sort }}"
      user_labels: "{{ label_list | default([]) }}"
      have_target_user_labels: "{{ ( user_labels | length > 0 ) }}"
      target_ent_list: "{{ target_entities | default([]) }}"
      have_target_ents: "{{ ( target_ent_list | length > 0 ) }}"
      labels_by_ent: |-
        {% if have_target_ents %}
          {
          {%- for ent in target_ent_list %}
            "{{ ent }}": {{ labels(ent) }}{{ "," if not loop.last else "" }}
          {%- endfor %}
          }
        {% else %}
          {}
        {% endif %}
      label_details_by_label: |-
        {% if have_target_user_labels %}
          {
          {%- for lbl in user_labels %}
            "{{ lbl }}": {
              "description": "{{ label_description( lbl ) | default('') }}"
            }{{ "," if not loop.last else "" }}
          {%- endfor %}
          }
        {% else %}
          {}
        {% endif %}
      minihelp: "Minihelp: actions = tag, untag, create, delete, summary, update"
      results_list: []
      failures_list: []
  - choose:
      - conditions:
          - condition: template
            value_template: >-
              {{ action not in
              ['tag','untag','create','delete','summary','update','read'] }}
            alias: Error - invalid Action
        sequence:
          - variables:
              response:
                status: error
                error: Invalid action_type '{{ action_type }}'. {{ minihelp }}
                index: "{{ label_index }}"
          - stop: response
            response_variable: Pass Car Scope
      - conditions:
          - condition: template
            value_template: "{{ action == 'create' }}"
            alias: CREATE
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ user_labels | length == 0 }}"
                    alias: User Labels are {}
                sequence:
                  - variables:
                      response:
                        status: error
                        error: Create requires at least one label. {{ minihelp }}
                        index: "{{ label_index }}"
                  - stop: pass var scope
                    response_variable: response
          - variables:
              to_create: |-
                [{% for label in user_labels if label not in label_index %}
                  "{{ label }}"{% if not loop.last %},{% endif %}
                {% endfor %}]
              already_exists: |-
                [{% for label in user_labels if label in label_index %}
                  "{{ label }}"{% if not loop.last %},{% endif %}
                {% endfor %}]
              target_labels: |-
                {% if confirm %}
                  {{ to_create }}
                {% else %}
                  []
                {% endif %}
          - variables:
              response:
                status: "{{ 'ok' if target_labels | count > 0 else 'start' }}"
                action: create
                to_create: "{{ to_create }}"
                already_exists: "{{ already_exists }}"
                confirm: "{{ confirm }}"
                target_labels: "{{ target_labels }}"
                message: |-
                  {% if target_labels | count > 0 %}
                    Started Create.
                  {% else %}
                    Some or all labels already existed and were skipped. Confirmation required.
                  {% endif %}
          - repeat:
              for_each: "{{ target_labels }}"
              sequence:
                - action: homeassistant.create_label
                  metadata: {}
                  data:
                    name: "{{ repeat.item }}"
                    description: tbd
                    color: primary
          - variables:
              created_count: "{{ target_labels | count }}"
              response:
                status: "{{ 'ok' if created_count > 0 else 'partial' }}"
                action: create
                confirm: "{{ confirm }}"
                created_labels: "{{ target_labels }}"
                already_existed: "{{ already_exists }}"
                message: |-
                  {% if created_count > 0 %}
                    Create Action Complete.
                  {% else %}
                    Create requires confirmation, no labels created.
                  {% endif %}
          - stop: pass var scope
            response_variable: response
      - conditions:
          - alias: READ
            condition: template
            value_template: "{{ ( action == 'read' ) or ( not action ) }}"
        sequence:
          - choose:
              - conditions:
                  - alias: Valid READ
                    condition: template
                    value_template: >-
                      {{ action == 'read' and ( have_target_user_labels or
                      have_target_ents ) }}
                sequence:
                  - variables:
                      response: |-
                        {{
                          {
                            "status": "ok",
                            "action": "read",
                            "label_list": user_labels,
                            "label_details_by_label": label_details_by_label,
                            "target_entities": target_ent_list,
                            "labels_by_ent": labels_by_ent
                          }
                        }}
                  - stop: Pass context
                    response_variable: response
          - variables:
              response: |-
                {{ {
                  'status': 'ok',
                  'action': 'read_index',
                  'target': '*',        
                  'index': label_index
                } }}
          - stop: pass var scope
            response_variable: response
      - conditions:
          - alias: DELETE
            condition: template
            value_template: "{{ action == 'delete' }}"
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ user_labels | length == 0 }}"
                    alias: User Labels are {}
                sequence:
                  - variables:
                      response:
                        status: error
                        error: Create requires at least one label. {{ minihelp }}
                        index: "{{ label_index }}"
                  - stop: pass var scope
                    response_variable: response
          - variables:
              to_delete: |-
                [{% for label in user_labels if label not in label_index %}
                  "{{ label }}"{% if not loop.last %},{% endif %}
                {% endfor %}]
              already_exists: |-
                [{% for label in user_labels if label in label_index %}
                  "{{ label }}"{% if not loop.last %},{% endif %}
                {% endfor %}]
              target_labels: |-
                {% if confirm %}
                  {{ to_delete }}
                {% else %}
                  []
                {% endif %}
          - variables:
              response:
                status: "{{ 'ok' if target_labels | count > 0 else 'start' }}"
                action: delete
                to_delete: "{{ to_delete }}"
                already_exists: "{{ already_exists }}"
                confirm: "{{ confirm }}"
                target_labels: "{{ target_labels }}"
                message: |-
                  {% if target_labels | count > 0 %}
                    Started Delete.
                  {% else %}
                    Some or all labels were skipped. Confirmation required.
                  {% endif %}
          - repeat:
              for_each: "{{ target_labels }}"
              sequence:
                - action: homeassistant.delete_label
                  data:
                    label_id: "{{ repeat.item | slugify }}"
          - variables:
              deleted_count: "{{ target_labels | count }}"
              response:
                status: "{{ 'ok' if deleted_count > 0 else 'partial' }}"
                action: delete
                confirm: "{{ confirm }}"
                deleted_labels: "{{ target_labels }}"
                message: |-
                  {% if deleted_count > 0 %}
                    Delete Action Complete.
                  {% else %}
                    Delete requires confirmation, no labels deleted.
                  {% endif %}
          - stop: pass var scope
            response_variable: response
        alias: DELETE
      - conditions:
          - condition: template
            value_template: "{{ action == 'tag' }}"
            alias: TAG
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ user_labels | length == 0 }}"
                    alias: Error - No Labels
                sequence:
                  - variables:
                      response:
                        status: error
                        error: Tag requires at least one label. {{ minihelp }}
                        index: "{{ label_index }}"
                  - stop: pass var scope
                    response_variable: response
              - conditions:
                  - alias: Error - no Targets
                    condition: template
                    value_template: "{{ target_ent_list | length == 0 }}"
                sequence:
                  - variables:
                      response:
                        status: error
                        error: >-
                          Tag requires at least one target entity. {{ minihelp
                          }}
                        index: "{{ label_index }}"
                  - stop: pass var scope
                    response_variable: response
          - action: homeassistant.add_label_to_entity
            data:
              label_id: "{{ user_labels }}"
              entity_id: "{{ target_ent_list }}"
          - variables:
              response:
                status: ok
                action: tag
                affected_labels: "{{ user_labels }}"
                affected_entities: "{{ target_ent_list }}"
          - stop: pass var scope
            response_variable: response
      - conditions:
          - alias: UNTAG
            condition: template
            value_template: "{{ action == 'untag' }}"
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ user_labels | length == 0 }}"
                    alias: Error - No Labels
                sequence:
                  - variables:
                      response:
                        status: error
                        error: Tag requires at least one label. {{ minihelp }}
                        index: "{{ label_index }}"
                  - stop: pass var scope
                    response_variable: response
              - conditions:
                  - alias: Error - no Targets
                    condition: template
                    value_template: "{{ target_ent_list | length == 0 }}"
                sequence:
                  - variables:
                      response:
                        status: error
                        error: >-
                          Tag requires at least one target entity. {{ minihelp
                          }}
                        index: "{{ label_index }}"
                  - stop: pass var scope
                    response_variable: response
          - action: homeassistant.remove_label_from_entity
            data:
              label_id: "{{ user_labels }}"
              entity_id: "{{ target_ent_list }}"
          - variables:
              response:
                status: ok
                action: untag
                affected_labels: "{{ user_labels }}"
                affected_entities: "{{ target_ent_list }}"
          - stop: pass var scope
            response_variable: response
  - choose:
      - conditions:
          - alias: No response defined yet
            condition: template
            value_template: "{{ response is not defined or response is string }}"
        sequence:
          - variables:
              response: >-
                {{ response | default({'status': 'error', 'error': 'Unknown
                error occurred.', 'index': label_index, 'help': minihelp}) }}
          - stop: Return
            response_variable: response
alias: Zen DojoTools Labels
description: >
  Zen DojoTools Labels (1.0.0) (was Label CRUD) Read, modify the index tags, tag
  and untag entities. Label manager for Home Assistant. Tool does NOT support
  overwrite. Hint: Read details for one or more labels to find out what those
  labels are...
fields:
  action_type:
    description: "'create', 'read', 'delete', 'tag', 'untag'"
    required: true
    selector:
      select:
        options:
          - create
          - read
          - delete
          - tag
          - untag
    default: read
  target_entities:
    description: >-
      List of entity_ids to apply labels to or summarize. Required for 'tag',
      'untag', and 'summary' actions.
    required: false
    selector:
      entity:
        multiple: true
  label_list:
    description: >-
      List of labels (case-insensitive). Required for 'tag', 'untag', 'create',
      and 'delete'.
    required: false
    selector:
      text:
        multiple: true
  confirm:
    description: >-
      Required for writable / destructive actions, Function will alert when
      Confirmation is required - expect it for Create, Delete, Update.  Confirms
      write actions have been OK's by your user.  ASK USER before using with any
      function requiring confirmation.
    required: false
    default: false
    selector:
      boolean: null
icon: mdi:label-multiple
