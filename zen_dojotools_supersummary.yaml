alias: Zen DojoTools SuperSummary
description: >-
  Zen DojoTools SuperSummary (1.1.0)
  Whole-home summarizer. - Uses zen_template schema  for validation.
  Writes ZEN_SUMMARY drawer. Only includes Kung Fu components with master switch ON.
  Guards against broken drawers.
icon: mdi:home-circle
mode: queued
max: 3
fields:
  query:
    selector:
      text: {}
    name: Override Query
    description: Override the default summarization query.
  post_to_kata_cabinet:
    selector:
      boolean: {}
    name: Post to Kata Cabinet
    description: Post to the Kata Cabinet after summarization? (default false).
  supplemental_prompt:
    selector:
      text: null
    name: Supplemental Prompt
    description: Extra instructions appended at the end of the summarization prompt.
sequence:
  - variables:
      dojo_cabinet: sensor.zen_dojo_cabinet
      kata_cabinet: sensor.zen_kata_storage_cabinet
      monk_response: {}
      filecabinet_response: {}
  - variables:
      zen_template: |-
        {{ ((state_attr('sensor.zen_kata_storage_cabinet','variables') or {})
            .get('zen_template',{}))
            .get('value',{})
            .get('structure',{})
            | to_json }}
  - variables:
      system_cortex: >-
        {{ (state_attr('sensor.variables','variables') or
        {}).get('SYSTEM_CORTEX',{}) | to_json }}
  - variables:
      fridays_purpose: >-
        {{ (state_attr('sensor.variables','variables') or {}).get("Friday's
        Purpose",{}) | to_json }}
  - variables:
      fridays_directives: >-
        {{ (state_attr('sensor.variables','variables') or {}).get("Friday's
        Directives",{}) | to_json }}
  - variables:
      fridays_console: >-
        {{ (state_attr('sensor.variables','variables') or {}).get("Friday's
        Console",{}) | to_json }}
  - variables:
      fridays_persona: Friday, the AI Assistant
  - variables:
      home_overview: >-
        {{ state_attr('sensor.zen_kata_storage_cabinet','variables') |
        default({}) | to_json }}
  - variables:
      last_summary: >-
        {{ (state_attr('sensor.zen_kata_storage_cabinet','variables') or
        {}).get('ZEN_SUMMARY',{}) | to_json }}
  - variables:
      active_components: >-
        {% set active = namespace(items={}) %} {% set active_kungfu_switches =
        expand(label_entities('Kung Fu System Switch'))
          | selectattr('domain', 'eq', 'input_boolean')
          | selectattr('state', 'eq', 'on')
          | map(attribute='entity_id')
          | list %}
        {% set variables = state_attr('sensor.variables', 'variables') %} {% for
        switch in active_kungfu_switches %}
          {% set component_key = switch | replace('input_boolean.', '') | replace('_master_switch', '') %}
          {% set component = variables[component_key].value.kungfu if variables and component_key in variables else None %}
          {% if component %}
            {% set active.items = dict(active.items, **{component_key: component}) %}
          {% endif %}
        {% endfor %} {{ active.items | tojson }}
      active_component_ids: "{{ (active_components | from_json).keys() | list }}"
  - variables:
      component_data: {}
  - repeat:
      for_each: "{{ (active_components | from_json).keys() | list }}"
      sequence:
        - variables:
            comp_drawer_raw: >-
              {{ (state_attr('sensor.zen_kata_storage_cabinet','variables') or
              {}).get(repeat.item, {}) }}
        - variables:
            comp_drawer: |-
              {% if comp_drawer_raw is string %}
                {{ comp_drawer_raw | from_json }}
              {% else %}
                {{ comp_drawer_raw }}
              {% endif %}
        - variables:
            component_data: >-
              {{ dict(component_data, **{ repeat.item:
              comp_drawer.get('value',{}) }) }}
  - variables:
      default_query: >-
        Given attached context, fill out the ZEN_SUMMARY schema. Return ONLY
        valid JSON matching the schema in zen_template. No markdown, no prose. -
        Normalize all fields. - If missing, return null or {}. - Include ONLY
        active components (already filtered). - Provide Cliffâ€™s Notes for
        important events, anomalies, and near-term focus.
      query: "{{ query | default(default_query) }}"
      review_data: |-
        {{
          {
            "dojo_cabinet": dojo_cabinet | default(''),
            "kata_cabinet": kata_cabinet | default(''),
            "system":
              {
                "cortex": system_cortex | default({}),
              },
            "components": component_data | default({}),
          }
        }}
      example_data: >-
        {{ (state_attr(kata_cabinet,'variables') or
        {}).get('zen_template',{}).get('value',{}).get('example',{}) }}
      prompt: |-
        {{
          {
            "query": query | default({}),
            "structure": zen_template | default({}),
            "example_data": example_data | default({}),
            "review_data": review_data | default({}),
            "supplemental_instructions": supplemental_prompt | default({})
          } | to_json
        }}
  - alias: Monk Runner
    action: ai_task.generate_data
    data:
      task_name: SuperSummary Monk
      instructions: "{{ prompt }}"
      entity_id: ai_task.gpt_oss_20b_local_ai_task
    response_variable: monk_response
    enabled: true
  - variables:
      zen_summary: "{{ monk_response.data | default({}) }}"
  - if:
      - condition: template
        value_template: "{{ zen_summary and (post_to_kata_cabinet == true) }}"
    then:
      - delay:
          milliseconds: 250
      - action: script.zen_dojotools_filecabinet
        data:
          action_type: update
          set_timestamp: true
          show_hidden_volumes: false
          force_action: true
          volume_entity_id:
            - sensor.zen_kata_storage_cabinet
          key: ZEN_SUMMARY
          value: "{{ zen_summary }}"
          label_input: Zen Summary
        response_variable: filecabinet_response
  - variables:
      final_response: |-
        {{
          {
            "active_component_ids": active_component_ids | default([]),
            "monk": monk_response | default({}),
            "post": post_to_kata_cabinet | default(false),
            "filecabinet_write": filecabinet_response | default({})
          }
        }}
  - stop: Return Response
    response_variable: final_response
