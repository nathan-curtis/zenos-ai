alias: Zen AdminTools CabinetAdmin
description: >
  Factory tool for stamping or repairing Cabinet sensors. Requires
  confirm_action: true to run. Auto-detects flag profiles from cabinet type or
  manifest labels. Parses mount:[GUID] drawers into _zen_relationships. Accepts
  person.* entities for ACLs (SID=user_id). Supports Chat History and Archive
  Cabinets.
sequence:
  - variables:
      confirm_action: "{{ confirm_action | default(false) }}"
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ not confirm_action }}"
        sequence:
          - variables:
              response:
                status: error
                message: "Confirmation required â€” set confirm_action: true."
          - stop: Confirmation required
            response_variable: response
  - variables:
      cabinet_entity: "{{ cabinet_entity | default('') }}"
      cabinet_type: "{{ cabinet_type | default('AI Data Storage Cabinet') }}"
      cabinet_friendly: >-
        {{ state_attr(cabinet_entity,'friendly_name') | default(cabinet_entity)
        }}
      now_iso: "{{ now().isoformat() }}"
      schema_version: 1
      cabinet_guid: >-
        {% set generated = now().timestamp() | string | replace('.', '') %} {%
        if force_new_guid %}
          {{ generated }}
        {% elif cabinet_guid not in ['', None] %}
          {{ cabinet_guid }}
        {% else %}
          {{ generated }}
        {% endif %}
      labels_from_manifest: >-
        {{ state_attr('sensor.zen_library_manifest','value') | default({}, true)
        }}
      flag_profile: |-
        {% if not auto_profile %}
          {{ explicit_flag_profile | default('standard') }}
        {% else %}
          {% set lbls = labels_from_manifest | string | lower %}
          {% if 'household_cabinet' in lbls %}system
          {% elif 'family_cabinet' in lbls %}secure
          {% elif 'user_cabinet' in lbls or 'ai_user' in lbls %}public
          {% elif 'kata_cabinet' in lbls or 'kata_storage' in lbls %}system
          {% elif 'chat_history' in lbls or cabinet_type | lower == 'chat history cabinet' %}secure
          {% elif 'archive_cabinet' in lbls or cabinet_type | lower == 'archive cabinet' %}system
          {% else %}standard{% endif %}
        {% endif %}
      flags: |-
        {% set fp = flag_profile %} {% if fp == 'system' %}
          {{ {'system': True, 'hidden': False, 'read_only': True, 'secure_mode': True} }}
        {% elif fp == 'secure' %}
          {{ {'system': False, 'hidden': True, 'read_only': True, 'secure_mode': True} }}
        {% elif fp == 'public' %}
          {{ {'system': False, 'hidden': False, 'read_only': False, 'secure_mode': False} }}
        {% else %}
          {{ {'system': False, 'hidden': False, 'read_only': False, 'secure_mode': False} }}
        {% endif %}
      acl_family: >-
        {% set fam_guid = family_guid | default('default-guid') %} {% set
        manifest = state_attr('sensor.zen_library_manifest','value') |
        default({}, true) %} {% set fam_name = 'My Family' %} {% if manifest is
        mapping %}
          {% for ent, data in manifest.items() %}
            {% if data.metadata.id == fam_guid %}
              {% set fam_name = data.friendly_name | default('My Family') %}
            {% endif %}
          {% endfor %}
        {% endif %} {{
          [
            {
              "family_guid": fam_guid,
              "nickname": fam_name
